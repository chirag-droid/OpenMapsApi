services:
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
      args:
        - FRONTEND_PROXY=http://frontend:3000
        - BACKEND_PROXY=http://backend:8080
        - RENDERER_PROXY=http://renderer:80
        - ROUTER_PROXY=http://router:5000
    restart: "always"
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - renderer
      - router
  
  frontend:
    build: frontend
    depends_on:
      - backend
  
  backend:
    build: backend
    user: user
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      renderer:
        condition: service_healthy
      router:
  
  router:
    build:
      context: router
      args:
        - DOWNLOAD_PBF=http://download.geofabrik.de/asia/india/northern-zone-latest.osm.pbf

  renderer:
    build:
      context: renderer
      dockerfile: Dockerfile
      args:
        - AUTOMATIC_UPDATES=disabled
        - DOWNLOAD_PBF=https://download.geofabrik.de/asia/india/northern-zone-latest.osm.pbf
        - DOWNLOAD_POLY=https://download.geofabrik.de/asia/india/northern-zone.poly
        - FLAT_NODES=disabled
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - osm-data:/data/database/
      - osm-tiles:/data/tiles/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 30s

volumes:
  osm-tiles:
    external: true
  osm-data:
    external: true
